input {
    stdin {
        codec => "json"
    }
}

filter {
    mutate {
        convert => {
            "client.bytes" => "integer"
            "server.bytes" => "integer"
        }
    }
    aggregate {
        task_id => "%{user.name}"
        code => "
                map['total_client_bytes'] ||= 0;
                map['total_client_bytes'] += event.get('client.bytes');
                
                map['total_server_bytes'] ||= 0;
                map['total_server_bytes'] += event.get('server.bytes');
                "
        push_map_as_event_on_timeout => true
        timeout_task_id_field => "user.name"
        timeout => 5
        timeout_code => "event.set('client_bytes_summary', event.get('total_client_bytes') > 1)"
    }
    mutate {
      remove_field => ["@version"]
    }
  
    if [event.action] == "threat_filter" {
      drop {}
    }
}

output {
    stdout {}
}